<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="data_8py" kind="file" language="Python">
    <compoundname>data.py</compoundname>
    <innerclass refid="classdata_1_1_cameras_data" prot="public">data::CamerasData</innerclass>
    <innerclass refid="classdata_1_1_data" prot="public">data::Data</innerclass>
    <innernamespace refid="namespacedata">data</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacedata" refkind="compound"><highlight class="keyword">from</highlight><highlight class="normal"><sp/>sqlalchemy<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>create_engine</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>pandas<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>pd</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal">USER<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;sqluser&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal">PASSWORD<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;Chroma1.0&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal">HOST<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;192.168.86.12&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal">PORT<sp/>=<sp/>3306</highlight></codeline>
<codeline lineno="8"><highlight class="normal">DATABASE<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;production_data&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal">CONNECTION<sp/>=<sp/>create_engine(url=</highlight><highlight class="stringliteral">&quot;mysql+pymysql://{0}:{1}@{2}:{3}/{4}&quot;</highlight><highlight class="normal">.format(USER,<sp/>PASSWORD,<sp/>HOST,<sp/>PORT,<sp/>DATABASE))</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="classdata_1_1_cameras_data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdata_1_1_cameras_data" kindref="compound">CamerasData</ref>:</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;The<sp/>CamerasData<sp/>class<sp/>have:</highlight></codeline>
<codeline lineno="14"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="15"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Methods:</highlight></codeline>
<codeline lineno="16"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_cameras_name()<sp/>:<sp/>Function<sp/>that<sp/>return<sp/>numpy.ndarray<sp/>with<sp/>the<sp/>names<sp/>of<sp/>the<sp/>cameras.</highlight></codeline>
<codeline lineno="17"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="18"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdata_1_1_cameras_data_1aa8a51b28fa55fe4335025056408b27b1" kindref="member">get_cameras_name</ref>(self):</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="21"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_cameras_name()</highlight></codeline>
<codeline lineno="22"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Function<sp/>that<sp/>return<sp/>numpy.ndarray<sp/>with<sp/>the<sp/>names<sp/>of<sp/>the<sp/>cameras.</highlight></codeline>
<codeline lineno="23"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="24"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="25"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cameras_name.values<sp/>(numpy.ndarray)</highlight></codeline>
<codeline lineno="26"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sql<sp/>=<sp/>f</highlight><highlight class="stringliteral">&quot;SELECT<sp/>TABLE_NAME<sp/>FROM<sp/>information_schema.tables<sp/>where<sp/>TABLE_NAME<sp/>LIKE<sp/>&apos;%%FinalTest&apos;<sp/>and<sp/>table_schema<sp/>=<sp/>&apos;production_data&apos;<sp/>ORDER<sp/>BY<sp/>TABLE_NAME&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cameras_name<sp/>=<sp/>pd.read_sql_query(sql,<sp/>CONNECTION)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cameras_name.values</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="classdata_1_1_data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdata_1_1_data" kindref="compound">Data</ref>:</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;The<sp/>MainWindow<sp/>class<sp/>inherits<sp/>QMainWindow<sp/>and<sp/>Ui_MainWindow<sp/>class<sp/>and<sp/>have:</highlight></codeline>
<codeline lineno="33"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="34"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Attributes:</highlight></codeline>
<codeline lineno="35"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table_name<sp/>:</highlight></codeline>
<codeline lineno="36"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>date_from<sp/>:</highlight></codeline>
<codeline lineno="37"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>date_to<sp/>:</highlight></codeline>
<codeline lineno="38"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="39"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Methods:</highlight></codeline>
<codeline lineno="40"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_data()<sp/>:<sp/><sp/>Function<sp/>that<sp/>return<sp/>DataFrame<sp/>with<sp/>data<sp/>for<sp/>selected<sp/>camera<sp/>and<sp/>selected<sp/>period<sp/>of<sp/>time</highlight></codeline>
<codeline lineno="41"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_options()<sp/>:<sp/>Function<sp/>that<sp/>return<sp/>DataFrame<sp/>with<sp/>data<sp/>for<sp/>every<sp/>option<sp/>with<sp/>decimal<sp/>or<sp/>integer<sp/>values.</highlight></codeline>
<codeline lineno="42"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_complete_test_res()<sp/>:<sp/>Function<sp/>that<sp/>return<sp/>DataFrame<sp/>with<sp/>data<sp/>for<sp/>all<sp/>tests,<sp/>not<sp/>only<sp/>the</highlight></codeline>
<codeline lineno="43"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accepted<sp/>and<sp/>passed<sp/>test.</highlight></codeline>
<codeline lineno="44"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdata_1_1_data_1a549a925818b17a9a716978d7eb31c761" kindref="member">__init__</ref>(self,<sp/>table_name,<sp/>date_from,<sp/>date_to):</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdata_1_1_data_1a2fedf45c3db7de36ccb9ddd5f03ce4e5" kindref="member">__table_name</ref><sp/>=<sp/>table_name</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdata_1_1_data_1a1cfb90efb91a4775b7c87283130412ab" kindref="member">__date_from</ref><sp/>=<sp/>date_from</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classdata_1_1_data_1a3d1dd673f2d5e8b7ea049fb5bfccee34" kindref="member">__date_to</ref><sp/>=<sp/>date_to</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdata_1_1_data_1aa4109d99b68c490e84c93fcf39ba8904" kindref="member">get_data</ref>(self):</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="52"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_data()</highlight></codeline>
<codeline lineno="53"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Function<sp/>that<sp/>return<sp/>DataFrame<sp/>with<sp/>data<sp/>for<sp/>selected<sp/>camera<sp/>and<sp/>selected<sp/>period<sp/>of<sp/>time.</highlight></codeline>
<codeline lineno="54"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="55"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="56"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_accepted_passed.set_index(&apos;Date&apos;)<sp/>(DataFrame)</highlight></codeline>
<codeline lineno="57"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sql<sp/>=<sp/>f</highlight><highlight class="stringliteral">&apos;SELECT<sp/>*<sp/>FROM<sp/>{self.__table_name}<sp/>WHERE<sp/>Date<sp/>&gt;=<sp/>&quot;{self.__date_from}&quot;<sp/>and<sp/>Date<sp/>&lt;<sp/>&quot;{self.__date_to}&quot;<sp/>and<sp/>(CompleteTestRes<sp/>=<sp/>&quot;Accepted&quot;<sp/>or<sp/>CompleteTestRes<sp/>=<sp/>&quot;Passed&quot;)&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_accepted_passed<sp/>=<sp/>pd.read_sql_query(sql,<sp/>CONNECTION)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_accepted_passed.set_index(</highlight><highlight class="stringliteral">&apos;Date&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdata_1_1_data_1adde6ba0e4bc74edda0bff00e0b9d9c41" kindref="member">get_options</ref>(self):</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="65"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_option()</highlight></codeline>
<codeline lineno="66"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Function<sp/>that<sp/>return<sp/>DataFrame<sp/>with<sp/>data<sp/>for<sp/>every<sp/>option<sp/>with<sp/>decimal<sp/>or<sp/>integer<sp/>values.</highlight></codeline>
<codeline lineno="67"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="68"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="69"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_accepted_passed.set_index(&apos;Date&apos;)<sp/>(DataFrame)</highlight></codeline>
<codeline lineno="70"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sql<sp/>=<sp/>f</highlight><highlight class="stringliteral">&quot;SELECT<sp/>column_name<sp/>FROM<sp/>INFORMATION_SCHEMA.COLUMNS<sp/>WHERE<sp/>TABLE_NAME<sp/>=<sp/>N&apos;{self.__table_name}&apos;and<sp/>(DATA_TYPE<sp/>=<sp/>&apos;decimal&apos;<sp/>or<sp/>DATA_TYPE<sp/>=<sp/>&apos;int&apos;)&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options<sp/>=<sp/>pd.read_sql_query(sql,<sp/>CONNECTION)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>options</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classdata_1_1_data_1a6721ace52e4d9d48f8cf9ae17338fb05" kindref="member">get_complete_test_res</ref>(self):</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="77"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_complete_test_res()</highlight></codeline>
<codeline lineno="78"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Function<sp/>that<sp/>return<sp/>DataFrame<sp/>with<sp/>data<sp/>for<sp/>all<sp/>tests,<sp/>not<sp/>only<sp/>the<sp/>accepted<sp/>and<sp/>passed<sp/>test.</highlight></codeline>
<codeline lineno="79"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="80"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="81"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compete_test_res<sp/>(DataFrame)</highlight></codeline>
<codeline lineno="82"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sql<sp/>=<sp/>f</highlight><highlight class="stringliteral">&apos;SELECT<sp/>CompleteTestRes<sp/>FROM<sp/>{self.__table_name}<sp/>WHERE<sp/>Date<sp/>&gt;=<sp/>&quot;{self.__date_from}&quot;<sp/>and<sp/>Date<sp/>&lt;<sp/>&quot;{self.__date_to}&quot;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>complete_test_res<sp/>=<sp/>pd.read_sql_query(sql,<sp/>CONNECTION)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>complete_test_res</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="D:/Katerina/data-visualisation-and-analysis-app/data.py"/>
  </compounddef>
</doxygen>
